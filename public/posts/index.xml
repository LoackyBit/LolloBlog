<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on LolloBlog</title>
        <link>https://example.com/posts/</link>
        <description>Recent content in Posts on LolloBlog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Lorenzo</copyright>
        <lastBuildDate>Wed, 02 Jul 2025 22:00:00 +0000</lastBuildDate><atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Da TradingView a MT5: Automazione della TrendBars Strategy su EUR/USD</title>
        <link>https://example.com/posts/blogpost---20250703/</link>
        <pubDate>Wed, 02 Jul 2025 22:00:00 +0000</pubDate>
        
        <guid>https://example.com/posts/blogpost---20250703/</guid>
        <description>&lt;img src="https://example.com/posts/blogpost---20250703/Pasted-image-20250703230925.png" alt="Featured image of post Da TradingView a MT5: Automazione della TrendBars Strategy su EUR/USD" /&gt;&lt;h1 id=&#34;da-tradingview-a-mt5-il-contesto&#34;&gt;Da TradingView a MT5: il contesto
&lt;/h1&gt;&lt;p&gt;TradingView offre uno degli ambienti migliori per lo sviluppo e il test di strategie tramite Pine Script, ma ha dei limiti importanti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non consente trading automatico diretto su conti reali.&lt;/li&gt;
&lt;li&gt;È più orientato all’analisi visuale che all’automazione.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MetaTrader 5, invece, è la piattaforma di riferimento per il trading automatico su Forex e CFD, grazie alla sua flessibilità e alla possibilità di utilizzare Expert Advisor programmati in MQL5.&lt;/p&gt;
&lt;h1 id=&#34;la-strategia-trendbars-su-base-ema-atr-e-hlc3&#34;&gt;La Strategia: TrendBars su base EMA, ATR e HLC3
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230925.png&#34;
	width=&#34;2940&#34;
	height=&#34;1912&#34;
	srcset=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230925_hu_bd70e21a98b0a81.png 480w, https://example.com/posts/blogpost---20250703/Pasted-image-20250703230925_hu_230383c32e4c506d.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pasted-image-20250703230925.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;369px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;La strategia TrendBars nasce da una semplice idea: colorare le barre in base alla deviazione della media HLC3 (media di High, Low e Close) rispetto a una EMA (media mobile esponenziale) dinamicamente &amp;ldquo;ampliata&amp;rdquo; da una banda di tolleranza calcolata tramite ATR (Average True Range) e un moltiplicatore.&lt;/p&gt;
&lt;p&gt;Le regole operative sono:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Long&lt;/strong&gt; se HLC3 &amp;gt; EMA + tolleranza&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Short&lt;/strong&gt; se HLC3 &amp;lt; EMA - tolleranza&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flat/chiusura&lt;/strong&gt; se HLC3 rientra nella banda neutrale tra EMA - tolleranza ed EMA + tolleranza&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le uscite sono sempre &amp;ldquo;a mercato&amp;rdquo;, senza target o stop fisso.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;specifiche-operative&#34;&gt;Specifiche operative
&lt;/h1&gt;&lt;p&gt;Per la mia applicazione pratica ho scelto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strumento:&lt;/strong&gt; EUR/USD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Capitale iniziale:&lt;/strong&gt; 1000 USD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leva:&lt;/strong&gt; 1:30&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volume fisso per operazione:&lt;/strong&gt; 30000 USD (0.3 lotti standard su EUR/USD)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Commissione:&lt;/strong&gt; 0,00006 USD per unità (da confrontare e adattare in base al broker MT5)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Margine massimo impegnato:&lt;/strong&gt; 100% del capitale&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Timeframe:&lt;/strong&gt; 5m&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Grafico:&lt;/strong&gt; Heikin Ashi (come su TradingView)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Piattaforma:&lt;/strong&gt; MT5 installato su MacBook Air M3 tramite Wine&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;la-conversione-da-pine-script-a-mql5&#34;&gt;La conversione: da Pine Script a MQL5
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703234720.png&#34;
	width=&#34;2940&#34;
	height=&#34;1912&#34;
	srcset=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703234720_hu_8e83308d400b29d3.png 480w, https://example.com/posts/blogpost---20250703/Pasted-image-20250703234720_hu_e8b02a728b8ed7e3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pasted-image-20250703234720.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;369px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-analisi-e-porting-della-logica&#34;&gt;1. Analisi e porting della logica
&lt;/h2&gt;&lt;p&gt;Ho analizzato il Pine Script originale, identificando i punti chiave:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calcolo EMA e ATR su dati regolari&lt;/li&gt;
&lt;li&gt;Calcolo HLC3 e condizioni di trend su dati Heikin Ashi&lt;/li&gt;
&lt;li&gt;Gestione dinamica della banda di tolleranza&lt;/li&gt;
&lt;li&gt;Selezione e visualizzazione colore barre&lt;/li&gt;
&lt;li&gt;Regole di ingresso/uscita e gestione delle posizioni&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-scrittura-dellexpert-advisor-in-mql5&#34;&gt;2. Scrittura dell’Expert Advisor in MQL5
&lt;/h2&gt;&lt;p&gt;Ho realizzato un EA che:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Replica fedelmente la logica del Pine Script (incluso il calcolo di Heikin Ashi su OHLC standard, poiché su MT5 non esiste un vero e proprio grafico Heikin Ashi, ma un’indicatore a parte)&lt;/li&gt;
&lt;li&gt;Gestisce la dimensione fissa dell’ordine, espressa in percentuale rispetto al capitale, e verifica i requisiti di margine prima di ogni operazione&lt;/li&gt;
&lt;li&gt;Mostra sul grafico tutte le informazioni utili: trend, valori EMA, ATR, tolleranza, colore barra, stato posizioni, ecc.&lt;/li&gt;
&lt;li&gt;Consente di visualizzare la EMA colorata, le bande di tolleranza e tutte le condizioni di ingresso/uscita&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-adattamento-alle-condizioni-del-broker-mt5&#34;&gt;3. Adattamento alle condizioni del broker MT5
&lt;/h2&gt;&lt;p&gt;Essendo i parametri di marginazione e commissione diversi tra Capital.com (usato in TradingView) e il mio nuovo broker MT5, ho inserito nel codice la possibilità di modificare facilmente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Commissione&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Calcolo del margine&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dimensione minima/massima del lotto&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-problemi-di-visualizzazione-su-mt5&#34;&gt;4. Problemi di Visualizzazione su MT5
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Innanzitutto non esiste la possibilità di visualizzare il grafico Heiken Ashi, se non tramite un indicatore.
&lt;img src=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703225820.png&#34;
	width=&#34;1324&#34;
	height=&#34;690&#34;
	srcset=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703225820_hu_c07abf67cc6663e4.png 480w, https://example.com/posts/blogpost---20250703/Pasted-image-20250703225820_hu_904d8189211a5c0.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pasted-image-20250703225820.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;460px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;L’Expert Advisor che ho sviluppato non è in grado di disegnare a grafico le candele Heikin Ashi modificate, perciò per la visualizzazione ho dovuto creare un’indicatore separato
&lt;img src=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230057.png&#34;
	width=&#34;2940&#34;
	height=&#34;1912&#34;
	srcset=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230057_hu_4c985eb955edc7ed.png 480w, https://example.com/posts/blogpost---20250703/Pasted-image-20250703230057_hu_cc15e666cb8f771f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pasted-image-20250703230057.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;369px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Per una migliore visualizzazione ho disattivato la visualizzazione del grafico, impostando il grafico ‘linea’ e poi selezionando il colore ‘none’ tramite le proprietà del grafico.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Siccome indicatore (visualizzatore) e strategia sono separati, non sarà possibile visualizzare il grafico Heikin Ashi modificato durante la simulazione del backtest.
&lt;img src=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230509.png&#34;
	width=&#34;2940&#34;
	height=&#34;1912&#34;
	srcset=&#34;https://example.com/posts/blogpost---20250703/Pasted-image-20250703230509_hu_82492f4fc2720640.png 480w, https://example.com/posts/blogpost---20250703/Pasted-image-20250703230509_hu_c1da521c3347a66c.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pasted-image-20250703230509.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;369px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&#34;installazione-e-test&#34;&gt;Installazione e test
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Installazione su MacBook Air M3&lt;/strong&gt;: MT5 funziona perfettamente tramite Wine. Ho compilato l’EA in MetaEditor, l’ho caricato sul grafico EUR/USD (Heikin Ashi), impostato i parametri richiesti e attivato il trading algoritmico.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Backtest&lt;/strong&gt;: Ho testato la strategia tramite il tester di MT5, impostando capitale, leva, commissioni e condizioni identiche a quelle di TradingView. In questo modo ho potuto verificare la corrispondenza tra i risultati ottenuti sulle due piattaforme.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How I Built My Blog with Hugo and the Stack Theme</title>
        <link>https://example.com/posts/first-post/</link>
        <pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/posts/first-post/</guid>
        <description>&lt;img src="https://example.com/posts/first-post/Pasted-image-20250613120635.png" alt="Featured image of post How I Built My Blog with Hugo and the Stack Theme" /&gt;&lt;h1 id=&#34;how-i-built-my-blog-with-hugo-and-the-stack-theme&#34;&gt;How I Built My Blog with Hugo and the Stack Theme
&lt;/h1&gt;&lt;p&gt;Hello everyone! In this post, I’ll share how I built my blog using &lt;strong&gt;Obsidian&lt;/strong&gt;, &lt;strong&gt;Hugo&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, and &lt;strong&gt;Hostinger&lt;/strong&gt;, following a tutorial by NetworkChuck and customizing it with the &lt;strong&gt;Stack&lt;/strong&gt; theme (&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/&lt;/a&gt;). I’ll also guide you through configuring the Stack theme to create a sleek and functional blog.&lt;/p&gt;
&lt;h2 id=&#34;why-a-blog&#34;&gt;Why a Blog?
&lt;/h2&gt;&lt;p&gt;Inspired by &lt;em&gt;Building a Second Brain&lt;/em&gt; by Tiago Forte, I started this blog to share my ideas and organize my thoughts in a way that’s accessible and valuable. My goal is to express what I’m learning and provide insights for myself, my friends, family, and anyone interested in my perspective.&lt;/p&gt;
&lt;h2 id=&#34;how-i-built-the-site&#34;&gt;How I Built the Site
&lt;/h2&gt;&lt;p&gt;Here are the main steps I followed to create my blog, adapted from NetworkChuck’s tutorial &lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/dnE7c0ELEH8&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;1-writing-posts-with-obsidian&#34;&gt;1. Writing Posts with Obsidian
&lt;/h3&gt;&lt;p&gt;I use &lt;strong&gt;Obsidian&lt;/strong&gt;, a powerful note-taking app, to write my blog posts in markdown. All posts are stored in a &lt;code&gt;post&lt;/code&gt; folder within my Obsidian vault. Each post starts with a front matter block, which includes metadata like title, date, and tags. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My First Post&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;2025-06-13&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;draft&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blog&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obsidian keeps my notes private, and only files in the &lt;code&gt;post&lt;/code&gt; folder are published. To ensure images work (though I’m still troubleshooting this), I plan to use a Python script to sync images from Obsidian’s &lt;code&gt;attachments&lt;/code&gt; folder to Hugo’s &lt;code&gt;static/images&lt;/code&gt; folder.&lt;/p&gt;
&lt;h3 id=&#34;2-generating-the-site-with-hugo&#34;&gt;2. Generating the Site with Hugo
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; is a static site generator that transforms markdown files into a website. Here’s how I set it up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: I installed Hugo on my Mac using Homebrew (&lt;code&gt;brew install hugo&lt;/code&gt;). I also installed Git and Go as prerequisites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Site Creation&lt;/strong&gt;: I created a new Hugo site with &lt;code&gt;hugo new site BlogName&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theme Setup&lt;/strong&gt;: I chose the &lt;strong&gt;Stack&lt;/strong&gt; theme (&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/&lt;/a&gt;) for its clean, card-style design. I installed it with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuration&lt;/strong&gt;: I configured Hugo in &lt;code&gt;hugo.toml&lt;/code&gt; by &lt;code&gt;nano&lt;/code&gt; command to use the Stack theme:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baseURL = &amp;#34;https://example.com/&amp;#34;  # Replace with your domain
languageCode = &amp;#34;en-us&amp;#34;
title = &amp;#34;First Post&amp;#34;
theme = &amp;#34;hugo-theme-stack&amp;#34;

[params]
  mainSections = [&amp;#34;post&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Syncing Posts&lt;/strong&gt;: I use &lt;code&gt;rsync&lt;/code&gt; to copy posts from Obsidian’s &lt;code&gt;post&lt;/code&gt; folder to Hugo’s &lt;code&gt;content/post&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete ~/path/to/obsidian/post/ ~/path/to/BlogName/content/post/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Testing Locally&lt;/strong&gt;: I run &lt;code&gt;hugo server -t hugo-theme-stack&lt;/code&gt; to preview the site at &lt;code&gt;http://localhost:1313&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-version-control-with-github&#34;&gt;3. Version Control with GitHub
&lt;/h3&gt;&lt;p&gt;I use &lt;strong&gt;GitHub&lt;/strong&gt; to store my site’s code and enable collaboration. Here’s the setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Repository Creation&lt;/strong&gt;: I created a repository named &lt;code&gt;BlogName&lt;/code&gt; on GitHub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH Authentication&lt;/strong&gt;: I generated an SSH key with &lt;code&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;my-email@example.com&amp;quot;&lt;/code&gt;. The keys were initially saved in the wrong directory, but I moved them to &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; and &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;, then added the public key to GitHub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pushing Code&lt;/strong&gt;: I initialized a Git repository in &lt;code&gt;BlogName&lt;/code&gt;, added a remote (&lt;code&gt;git remote add origin git@github.com:username/BlogName.git&lt;/code&gt;), and pushed changes:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Initial commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publishing&lt;/strong&gt;: I pushed the &lt;code&gt;public&lt;/code&gt; folder to a &lt;code&gt;hostinger&lt;/code&gt; branch for deployment:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git subtree push --prefix public origin hostinger
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-hosting-with-vercel&#34;&gt;4. Hosting with Vercel
&lt;/h3&gt;&lt;p&gt;Instead using &lt;strong&gt;Hostinger&lt;/strong&gt; I deployed the site using &lt;strong&gt;Vercel&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Site Setup&lt;/strong&gt;: I created a new site on Vercel, linked to my GitHub repository&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Webhook&lt;/strong&gt;: I set up a webhook on GitHub to auto-deploy updates when I push to the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-automating-the-workflow&#34;&gt;5. Automating the Workflow
&lt;/h3&gt;&lt;p&gt;To streamline publishing, I created a Bash script (&lt;code&gt;updateblog.sh&lt;/code&gt;) that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syncs posts with &lt;code&gt;rsync&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Runs the Python script for images &lt;code&gt;images.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Generates the site with &lt;code&gt;hugo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Commits and pushes to GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here’s the script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Variabili&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OBSIDIAN_POST_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HUGO_POST_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IMAGES_SCRIPT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HUGO_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REPO_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link here&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Sincronizza i file markdown da Obsidian a Hugo con rsync&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 1: Sincronizzazione dei file markdown da Obsidian a Hugo con rsync...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OBSIDIAN_POST_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HUGO_POST_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Sincronizzazione con rsync fallita. Controlla i percorsi o installa rsync.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 1 completato: Sincronizzazione terminata.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Esegui lo script Python per sincronizzare markdown e immagini&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 2: Esecuzione dello script Python per sincronizzare markdown e immagini...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$IMAGES_SCRIPT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Esecuzione dello script Python fallita. Controlla il file images.py o i percorsi.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 2 completato: Elaborazione Python terminata.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Vai alla directory di Hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 3: Spostamento nella directory di Hugo...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HUGO_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Impossibile cambiare directory in &lt;/span&gt;$HUGO_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 3 completato: Directory cambiata in &lt;/span&gt;$HUGO_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Genera il sito&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 4: Generazione del sito con Hugo...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Generazione del sito con Hugo fallita. Controlla la configurazione.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 4 completato: Generazione del sito terminata.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Aggiungi e commita i file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 5: Aggiunta e commit dei file...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Aggiornamento blog &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +%F&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Commit dei file fallito. Controlla lo stato del repository Git.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 5 completato: Commit eseguito.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 6: Push sul branch principale (per Vercel)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 6: Push sul branch principale per Vercel...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Errore: Push sul branch principale fallito. Controlla la connessione SSH o il repository.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 6 completato: Push eseguito con successo.&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Script Name&lt;/strong&gt;: &lt;code&gt;updateblog.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace the &lt;code&gt;paths&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; with your own. Run it after making it executable (&lt;code&gt;chmod +x updateblog.sh&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&#34;guide-to-using-the-stack-theme&#34;&gt;Guide to Using the Stack Theme
&lt;/h2&gt;&lt;p&gt;The &lt;strong&gt;Stack&lt;/strong&gt; theme (&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/&lt;/a&gt;) is a card-style theme designed for bloggers. Here’s how to configure it, based on its documentation (&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/config/%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/config/)&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;installation&#34;&gt;Installation
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add the theme as a Git submodule:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update &lt;code&gt;hugo.toml&lt;/code&gt; to set the theme:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hugo-theme-stack&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration
&lt;/h3&gt;&lt;p&gt;Stack supports TOML and YAML configuration, with a planned migration to TOML. For a full list of options, check the &lt;code&gt;config.yaml&lt;/code&gt; file in the theme’s root or the documentation (&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/config/%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/config/)&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;creating-posts&#34;&gt;Creating Posts
&lt;/h3&gt;&lt;p&gt;Posts need a front matter block. Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;title &lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your Post Title&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;date &lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;2025-06-13&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;draft &lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;tags &lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tag1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tag2&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;description &lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A short description&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;draft : false&lt;/code&gt; to publish the post.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;image&lt;/code&gt; to add a cover image&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;testing&#34;&gt;Testing
&lt;/h3&gt;&lt;p&gt;Run &lt;code&gt;hugo server -t hugo-theme-stack --buildDrafts&lt;/code&gt; to preview changes locally. Ensure posts appear in the card layout on &lt;code&gt;http://localhost:1313&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Happy blogging!&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
